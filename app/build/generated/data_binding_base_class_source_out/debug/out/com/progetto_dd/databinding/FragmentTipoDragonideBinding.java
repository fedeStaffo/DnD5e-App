// Generated by view binder compiler. Do not edit!
package com.progetto_dd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.progetto_dd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTipoDragonideBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox argentoCheckBox;

  @NonNull
  public final CheckBox biancoCheckBox;

  @NonNull
  public final CheckBox bluCheckBox;

  @NonNull
  public final CheckBox bronzoCheckBox;

  @NonNull
  public final Button btnAvanti;

  @NonNull
  public final LinearLayout dragoArgento;

  @NonNull
  public final LinearLayout dragoBianco;

  @NonNull
  public final LinearLayout dragoBlu;

  @NonNull
  public final LinearLayout dragoBronzo;

  @NonNull
  public final LinearLayout dragoNero;

  @NonNull
  public final LinearLayout dragoOro;

  @NonNull
  public final LinearLayout dragoOttone;

  @NonNull
  public final LinearLayout dragoRame;

  @NonNull
  public final LinearLayout dragoRosso;

  @NonNull
  public final LinearLayout dragoVerde;

  @NonNull
  public final CheckBox neroCheckBox;

  @NonNull
  public final CheckBox oroCheckBox;

  @NonNull
  public final CheckBox ottoneCheckBox;

  @NonNull
  public final CheckBox rameCheckBox;

  @NonNull
  public final CheckBox rossoCheckBox;

  @NonNull
  public final CheckBox verdeCheckBox;

  private FragmentTipoDragonideBinding(@NonNull LinearLayout rootView,
      @NonNull CheckBox argentoCheckBox, @NonNull CheckBox biancoCheckBox,
      @NonNull CheckBox bluCheckBox, @NonNull CheckBox bronzoCheckBox, @NonNull Button btnAvanti,
      @NonNull LinearLayout dragoArgento, @NonNull LinearLayout dragoBianco,
      @NonNull LinearLayout dragoBlu, @NonNull LinearLayout dragoBronzo,
      @NonNull LinearLayout dragoNero, @NonNull LinearLayout dragoOro,
      @NonNull LinearLayout dragoOttone, @NonNull LinearLayout dragoRame,
      @NonNull LinearLayout dragoRosso, @NonNull LinearLayout dragoVerde,
      @NonNull CheckBox neroCheckBox, @NonNull CheckBox oroCheckBox,
      @NonNull CheckBox ottoneCheckBox, @NonNull CheckBox rameCheckBox,
      @NonNull CheckBox rossoCheckBox, @NonNull CheckBox verdeCheckBox) {
    this.rootView = rootView;
    this.argentoCheckBox = argentoCheckBox;
    this.biancoCheckBox = biancoCheckBox;
    this.bluCheckBox = bluCheckBox;
    this.bronzoCheckBox = bronzoCheckBox;
    this.btnAvanti = btnAvanti;
    this.dragoArgento = dragoArgento;
    this.dragoBianco = dragoBianco;
    this.dragoBlu = dragoBlu;
    this.dragoBronzo = dragoBronzo;
    this.dragoNero = dragoNero;
    this.dragoOro = dragoOro;
    this.dragoOttone = dragoOttone;
    this.dragoRame = dragoRame;
    this.dragoRosso = dragoRosso;
    this.dragoVerde = dragoVerde;
    this.neroCheckBox = neroCheckBox;
    this.oroCheckBox = oroCheckBox;
    this.ottoneCheckBox = ottoneCheckBox;
    this.rameCheckBox = rameCheckBox;
    this.rossoCheckBox = rossoCheckBox;
    this.verdeCheckBox = verdeCheckBox;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTipoDragonideBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTipoDragonideBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tipo_dragonide, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTipoDragonideBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.argentoCheckBox;
      CheckBox argentoCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (argentoCheckBox == null) {
        break missingId;
      }

      id = R.id.biancoCheckBox;
      CheckBox biancoCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (biancoCheckBox == null) {
        break missingId;
      }

      id = R.id.bluCheckBox;
      CheckBox bluCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (bluCheckBox == null) {
        break missingId;
      }

      id = R.id.bronzoCheckBox;
      CheckBox bronzoCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (bronzoCheckBox == null) {
        break missingId;
      }

      id = R.id.btn_avanti;
      Button btnAvanti = ViewBindings.findChildViewById(rootView, id);
      if (btnAvanti == null) {
        break missingId;
      }

      id = R.id.drago_argento;
      LinearLayout dragoArgento = ViewBindings.findChildViewById(rootView, id);
      if (dragoArgento == null) {
        break missingId;
      }

      id = R.id.drago_bianco;
      LinearLayout dragoBianco = ViewBindings.findChildViewById(rootView, id);
      if (dragoBianco == null) {
        break missingId;
      }

      id = R.id.drago_blu;
      LinearLayout dragoBlu = ViewBindings.findChildViewById(rootView, id);
      if (dragoBlu == null) {
        break missingId;
      }

      id = R.id.drago_bronzo;
      LinearLayout dragoBronzo = ViewBindings.findChildViewById(rootView, id);
      if (dragoBronzo == null) {
        break missingId;
      }

      id = R.id.drago_nero;
      LinearLayout dragoNero = ViewBindings.findChildViewById(rootView, id);
      if (dragoNero == null) {
        break missingId;
      }

      id = R.id.drago_oro;
      LinearLayout dragoOro = ViewBindings.findChildViewById(rootView, id);
      if (dragoOro == null) {
        break missingId;
      }

      id = R.id.drago_ottone;
      LinearLayout dragoOttone = ViewBindings.findChildViewById(rootView, id);
      if (dragoOttone == null) {
        break missingId;
      }

      id = R.id.drago_rame;
      LinearLayout dragoRame = ViewBindings.findChildViewById(rootView, id);
      if (dragoRame == null) {
        break missingId;
      }

      id = R.id.drago_rosso;
      LinearLayout dragoRosso = ViewBindings.findChildViewById(rootView, id);
      if (dragoRosso == null) {
        break missingId;
      }

      id = R.id.drago_verde;
      LinearLayout dragoVerde = ViewBindings.findChildViewById(rootView, id);
      if (dragoVerde == null) {
        break missingId;
      }

      id = R.id.neroCheckBox;
      CheckBox neroCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (neroCheckBox == null) {
        break missingId;
      }

      id = R.id.oroCheckBox;
      CheckBox oroCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (oroCheckBox == null) {
        break missingId;
      }

      id = R.id.ottoneCheckBox;
      CheckBox ottoneCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (ottoneCheckBox == null) {
        break missingId;
      }

      id = R.id.rameCheckBox;
      CheckBox rameCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (rameCheckBox == null) {
        break missingId;
      }

      id = R.id.rossoCheckBox;
      CheckBox rossoCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (rossoCheckBox == null) {
        break missingId;
      }

      id = R.id.verdeCheckBox;
      CheckBox verdeCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (verdeCheckBox == null) {
        break missingId;
      }

      return new FragmentTipoDragonideBinding((LinearLayout) rootView, argentoCheckBox,
          biancoCheckBox, bluCheckBox, bronzoCheckBox, btnAvanti, dragoArgento, dragoBianco,
          dragoBlu, dragoBronzo, dragoNero, dragoOro, dragoOttone, dragoRame, dragoRosso,
          dragoVerde, neroCheckBox, oroCheckBox, ottoneCheckBox, rameCheckBox, rossoCheckBox,
          verdeCheckBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
