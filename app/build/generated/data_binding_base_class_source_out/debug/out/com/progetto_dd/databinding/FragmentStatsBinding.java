// Generated by view binder compiler. Do not edit!
package com.progetto_dd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.progetto_dd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStatsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView bonusCompetenza;

  @NonNull
  public final Button btnElimina;

  @NonNull
  public final Button btnModifica;

  @NonNull
  public final TextView classe;

  @NonNull
  public final TextView classeArmatura;

  @NonNull
  public final TextView listaCompetenze;

  @NonNull
  public final TextView livello;

  @NonNull
  public final TextView modificatoreCarisma;

  @NonNull
  public final TextView modificatoreCostituzione;

  @NonNull
  public final TextView modificatoreDestrezza;

  @NonNull
  public final TextView modificatoreForza;

  @NonNull
  public final TextView modificatoreIntelligenza;

  @NonNull
  public final TextView modificatoreSaggezza;

  @NonNull
  public final TextView nome;

  @NonNull
  public final TextView razza;

  @NonNull
  public final TextView saluteAttuale;

  @NonNull
  public final TextView saluteMassima;

  @NonNull
  public final TextView stato;

  @NonNull
  public final TextView tiriSalvezza;

  private FragmentStatsBinding(@NonNull ScrollView rootView, @NonNull TextView bonusCompetenza,
      @NonNull Button btnElimina, @NonNull Button btnModifica, @NonNull TextView classe,
      @NonNull TextView classeArmatura, @NonNull TextView listaCompetenze,
      @NonNull TextView livello, @NonNull TextView modificatoreCarisma,
      @NonNull TextView modificatoreCostituzione, @NonNull TextView modificatoreDestrezza,
      @NonNull TextView modificatoreForza, @NonNull TextView modificatoreIntelligenza,
      @NonNull TextView modificatoreSaggezza, @NonNull TextView nome, @NonNull TextView razza,
      @NonNull TextView saluteAttuale, @NonNull TextView saluteMassima, @NonNull TextView stato,
      @NonNull TextView tiriSalvezza) {
    this.rootView = rootView;
    this.bonusCompetenza = bonusCompetenza;
    this.btnElimina = btnElimina;
    this.btnModifica = btnModifica;
    this.classe = classe;
    this.classeArmatura = classeArmatura;
    this.listaCompetenze = listaCompetenze;
    this.livello = livello;
    this.modificatoreCarisma = modificatoreCarisma;
    this.modificatoreCostituzione = modificatoreCostituzione;
    this.modificatoreDestrezza = modificatoreDestrezza;
    this.modificatoreForza = modificatoreForza;
    this.modificatoreIntelligenza = modificatoreIntelligenza;
    this.modificatoreSaggezza = modificatoreSaggezza;
    this.nome = nome;
    this.razza = razza;
    this.saluteAttuale = saluteAttuale;
    this.saluteMassima = saluteMassima;
    this.stato = stato;
    this.tiriSalvezza = tiriSalvezza;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStatsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStatsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_stats, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStatsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bonusCompetenza;
      TextView bonusCompetenza = ViewBindings.findChildViewById(rootView, id);
      if (bonusCompetenza == null) {
        break missingId;
      }

      id = R.id.btnElimina;
      Button btnElimina = ViewBindings.findChildViewById(rootView, id);
      if (btnElimina == null) {
        break missingId;
      }

      id = R.id.btnModifica;
      Button btnModifica = ViewBindings.findChildViewById(rootView, id);
      if (btnModifica == null) {
        break missingId;
      }

      id = R.id.classe;
      TextView classe = ViewBindings.findChildViewById(rootView, id);
      if (classe == null) {
        break missingId;
      }

      id = R.id.classeArmatura;
      TextView classeArmatura = ViewBindings.findChildViewById(rootView, id);
      if (classeArmatura == null) {
        break missingId;
      }

      id = R.id.listaCompetenze;
      TextView listaCompetenze = ViewBindings.findChildViewById(rootView, id);
      if (listaCompetenze == null) {
        break missingId;
      }

      id = R.id.livello;
      TextView livello = ViewBindings.findChildViewById(rootView, id);
      if (livello == null) {
        break missingId;
      }

      id = R.id.modificatore_carisma;
      TextView modificatoreCarisma = ViewBindings.findChildViewById(rootView, id);
      if (modificatoreCarisma == null) {
        break missingId;
      }

      id = R.id.modificatore_costituzione;
      TextView modificatoreCostituzione = ViewBindings.findChildViewById(rootView, id);
      if (modificatoreCostituzione == null) {
        break missingId;
      }

      id = R.id.modificatore_destrezza;
      TextView modificatoreDestrezza = ViewBindings.findChildViewById(rootView, id);
      if (modificatoreDestrezza == null) {
        break missingId;
      }

      id = R.id.modificatore_forza;
      TextView modificatoreForza = ViewBindings.findChildViewById(rootView, id);
      if (modificatoreForza == null) {
        break missingId;
      }

      id = R.id.modificatore_intelligenza;
      TextView modificatoreIntelligenza = ViewBindings.findChildViewById(rootView, id);
      if (modificatoreIntelligenza == null) {
        break missingId;
      }

      id = R.id.modificatore_saggezza;
      TextView modificatoreSaggezza = ViewBindings.findChildViewById(rootView, id);
      if (modificatoreSaggezza == null) {
        break missingId;
      }

      id = R.id.nome;
      TextView nome = ViewBindings.findChildViewById(rootView, id);
      if (nome == null) {
        break missingId;
      }

      id = R.id.razza;
      TextView razza = ViewBindings.findChildViewById(rootView, id);
      if (razza == null) {
        break missingId;
      }

      id = R.id.salute_attuale;
      TextView saluteAttuale = ViewBindings.findChildViewById(rootView, id);
      if (saluteAttuale == null) {
        break missingId;
      }

      id = R.id.salute_massima;
      TextView saluteMassima = ViewBindings.findChildViewById(rootView, id);
      if (saluteMassima == null) {
        break missingId;
      }

      id = R.id.stato;
      TextView stato = ViewBindings.findChildViewById(rootView, id);
      if (stato == null) {
        break missingId;
      }

      id = R.id.tiriSalvezza;
      TextView tiriSalvezza = ViewBindings.findChildViewById(rootView, id);
      if (tiriSalvezza == null) {
        break missingId;
      }

      return new FragmentStatsBinding((ScrollView) rootView, bonusCompetenza, btnElimina,
          btnModifica, classe, classeArmatura, listaCompetenze, livello, modificatoreCarisma,
          modificatoreCostituzione, modificatoreDestrezza, modificatoreForza,
          modificatoreIntelligenza, modificatoreSaggezza, nome, razza, saluteAttuale, saluteMassima,
          stato, tiriSalvezza);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
