// Generated by view binder compiler. Do not edit!
package com.progetto_dd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.progetto_dd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNpcDetailsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView Descrizione;

  @NonNull
  public final TextView Legame;

  @NonNull
  public final TextView Nome;

  @NonNull
  public final Button eliminaNpc;

  @NonNull
  public final Button modificaDescrizioneButton;

  @NonNull
  public final EditText modificaDescrizioneEdittext;

  @NonNull
  public final Button modificaLegameButton;

  @NonNull
  public final Button salvaDescrizioneButton;

  @NonNull
  public final Button salvaLegameButton;

  @NonNull
  public final Spinner spinnerLegame;

  private FragmentNpcDetailsBinding(@NonNull ScrollView rootView, @NonNull TextView Descrizione,
      @NonNull TextView Legame, @NonNull TextView Nome, @NonNull Button eliminaNpc,
      @NonNull Button modificaDescrizioneButton, @NonNull EditText modificaDescrizioneEdittext,
      @NonNull Button modificaLegameButton, @NonNull Button salvaDescrizioneButton,
      @NonNull Button salvaLegameButton, @NonNull Spinner spinnerLegame) {
    this.rootView = rootView;
    this.Descrizione = Descrizione;
    this.Legame = Legame;
    this.Nome = Nome;
    this.eliminaNpc = eliminaNpc;
    this.modificaDescrizioneButton = modificaDescrizioneButton;
    this.modificaDescrizioneEdittext = modificaDescrizioneEdittext;
    this.modificaLegameButton = modificaLegameButton;
    this.salvaDescrizioneButton = salvaDescrizioneButton;
    this.salvaLegameButton = salvaLegameButton;
    this.spinnerLegame = spinnerLegame;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNpcDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNpcDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_npc_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNpcDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Descrizione;
      TextView Descrizione = ViewBindings.findChildViewById(rootView, id);
      if (Descrizione == null) {
        break missingId;
      }

      id = R.id.Legame;
      TextView Legame = ViewBindings.findChildViewById(rootView, id);
      if (Legame == null) {
        break missingId;
      }

      id = R.id.Nome;
      TextView Nome = ViewBindings.findChildViewById(rootView, id);
      if (Nome == null) {
        break missingId;
      }

      id = R.id.elimina_npc;
      Button eliminaNpc = ViewBindings.findChildViewById(rootView, id);
      if (eliminaNpc == null) {
        break missingId;
      }

      id = R.id.modificaDescrizioneButton;
      Button modificaDescrizioneButton = ViewBindings.findChildViewById(rootView, id);
      if (modificaDescrizioneButton == null) {
        break missingId;
      }

      id = R.id.modificaDescrizioneEdittext;
      EditText modificaDescrizioneEdittext = ViewBindings.findChildViewById(rootView, id);
      if (modificaDescrizioneEdittext == null) {
        break missingId;
      }

      id = R.id.modificaLegameButton;
      Button modificaLegameButton = ViewBindings.findChildViewById(rootView, id);
      if (modificaLegameButton == null) {
        break missingId;
      }

      id = R.id.salvaDescrizioneButton;
      Button salvaDescrizioneButton = ViewBindings.findChildViewById(rootView, id);
      if (salvaDescrizioneButton == null) {
        break missingId;
      }

      id = R.id.salvaLegameButton;
      Button salvaLegameButton = ViewBindings.findChildViewById(rootView, id);
      if (salvaLegameButton == null) {
        break missingId;
      }

      id = R.id.spinnerLegame;
      Spinner spinnerLegame = ViewBindings.findChildViewById(rootView, id);
      if (spinnerLegame == null) {
        break missingId;
      }

      return new FragmentNpcDetailsBinding((ScrollView) rootView, Descrizione, Legame, Nome,
          eliminaNpc, modificaDescrizioneButton, modificaDescrizioneEdittext, modificaLegameButton,
          salvaDescrizioneButton, salvaLegameButton, spinnerLegame);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
