// Generated by view binder compiler. Do not edit!
package com.progetto_dd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.progetto_dd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCaratteristicheMezzelfoBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout acrobazia;

  @NonNull
  public final CheckBox acrobaziaCheckBox;

  @NonNull
  public final CheckBox addanimaliCheckBox;

  @NonNull
  public final LinearLayout addestrareanimali;

  @NonNull
  public final LinearLayout arcano;

  @NonNull
  public final CheckBox arcanoCheckBox;

  @NonNull
  public final LinearLayout atletica;

  @NonNull
  public final CheckBox atleticaCheckBox;

  @NonNull
  public final Button btnAvanti;

  @NonNull
  public final LinearLayout carisma;

  @NonNull
  public final CheckBox carismaCheckBox;

  @NonNull
  public final TextView competenzeMezzelfo;

  @NonNull
  public final LinearLayout costituzione;

  @NonNull
  public final CheckBox costituzioneCheckBox;

  @NonNull
  public final LinearLayout destrezza;

  @NonNull
  public final CheckBox destrezzaCheckBox;

  @NonNull
  public final LinearLayout forza;

  @NonNull
  public final CheckBox forzaCheckBox;

  @NonNull
  public final LinearLayout furtivita;

  @NonNull
  public final CheckBox furtivitaCheckBox;

  @NonNull
  public final LinearLayout indagare;

  @NonNull
  public final CheckBox indagareCheckBox;

  @NonNull
  public final LinearLayout inganno;

  @NonNull
  public final CheckBox ingannoCheckBox;

  @NonNull
  public final LinearLayout intelligenza;

  @NonNull
  public final CheckBox intelligenzaCheckBox;

  @NonNull
  public final LinearLayout intimidazione;

  @NonNull
  public final CheckBox intimidazioneCheckBox;

  @NonNull
  public final LinearLayout intrattenere;

  @NonNull
  public final CheckBox intrattenereCheckBox;

  @NonNull
  public final LinearLayout intuizione;

  @NonNull
  public final CheckBox intuizioneCheckBox;

  @NonNull
  public final TextView linguaggioMezzelfo;

  @NonNull
  public final LinearLayout medicina;

  @NonNull
  public final CheckBox medicinaCheckBox;

  @NonNull
  public final LinearLayout natura;

  @NonNull
  public final CheckBox naturaCheckBox;

  @NonNull
  public final TextView numCompetenzeText;

  @NonNull
  public final LinearLayout percezione;

  @NonNull
  public final CheckBox percezioneCheckBox;

  @NonNull
  public final LinearLayout persuasione;

  @NonNull
  public final CheckBox persuasioneCheckBox;

  @NonNull
  public final TextView punteggiCaratteristica;

  @NonNull
  public final LinearLayout rapiditadimano;

  @NonNull
  public final CheckBox rapiditamanoCheckBox;

  @NonNull
  public final LinearLayout religione;

  @NonNull
  public final CheckBox religioneCheckBox;

  @NonNull
  public final LinearLayout saggezza;

  @NonNull
  public final CheckBox saggezzaCheckBox;

  @NonNull
  public final LinearLayout sopravvivenza;

  @NonNull
  public final CheckBox sopravvivenzaCheckBox;

  @NonNull
  public final Spinner spinnerLingua;

  @NonNull
  public final LinearLayout storia;

  @NonNull
  public final CheckBox storiaCheckBox;

  private FragmentCaratteristicheMezzelfoBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout acrobazia, @NonNull CheckBox acrobaziaCheckBox,
      @NonNull CheckBox addanimaliCheckBox, @NonNull LinearLayout addestrareanimali,
      @NonNull LinearLayout arcano, @NonNull CheckBox arcanoCheckBox,
      @NonNull LinearLayout atletica, @NonNull CheckBox atleticaCheckBox, @NonNull Button btnAvanti,
      @NonNull LinearLayout carisma, @NonNull CheckBox carismaCheckBox,
      @NonNull TextView competenzeMezzelfo, @NonNull LinearLayout costituzione,
      @NonNull CheckBox costituzioneCheckBox, @NonNull LinearLayout destrezza,
      @NonNull CheckBox destrezzaCheckBox, @NonNull LinearLayout forza,
      @NonNull CheckBox forzaCheckBox, @NonNull LinearLayout furtivita,
      @NonNull CheckBox furtivitaCheckBox, @NonNull LinearLayout indagare,
      @NonNull CheckBox indagareCheckBox, @NonNull LinearLayout inganno,
      @NonNull CheckBox ingannoCheckBox, @NonNull LinearLayout intelligenza,
      @NonNull CheckBox intelligenzaCheckBox, @NonNull LinearLayout intimidazione,
      @NonNull CheckBox intimidazioneCheckBox, @NonNull LinearLayout intrattenere,
      @NonNull CheckBox intrattenereCheckBox, @NonNull LinearLayout intuizione,
      @NonNull CheckBox intuizioneCheckBox, @NonNull TextView linguaggioMezzelfo,
      @NonNull LinearLayout medicina, @NonNull CheckBox medicinaCheckBox,
      @NonNull LinearLayout natura, @NonNull CheckBox naturaCheckBox,
      @NonNull TextView numCompetenzeText, @NonNull LinearLayout percezione,
      @NonNull CheckBox percezioneCheckBox, @NonNull LinearLayout persuasione,
      @NonNull CheckBox persuasioneCheckBox, @NonNull TextView punteggiCaratteristica,
      @NonNull LinearLayout rapiditadimano, @NonNull CheckBox rapiditamanoCheckBox,
      @NonNull LinearLayout religione, @NonNull CheckBox religioneCheckBox,
      @NonNull LinearLayout saggezza, @NonNull CheckBox saggezzaCheckBox,
      @NonNull LinearLayout sopravvivenza, @NonNull CheckBox sopravvivenzaCheckBox,
      @NonNull Spinner spinnerLingua, @NonNull LinearLayout storia,
      @NonNull CheckBox storiaCheckBox) {
    this.rootView = rootView;
    this.acrobazia = acrobazia;
    this.acrobaziaCheckBox = acrobaziaCheckBox;
    this.addanimaliCheckBox = addanimaliCheckBox;
    this.addestrareanimali = addestrareanimali;
    this.arcano = arcano;
    this.arcanoCheckBox = arcanoCheckBox;
    this.atletica = atletica;
    this.atleticaCheckBox = atleticaCheckBox;
    this.btnAvanti = btnAvanti;
    this.carisma = carisma;
    this.carismaCheckBox = carismaCheckBox;
    this.competenzeMezzelfo = competenzeMezzelfo;
    this.costituzione = costituzione;
    this.costituzioneCheckBox = costituzioneCheckBox;
    this.destrezza = destrezza;
    this.destrezzaCheckBox = destrezzaCheckBox;
    this.forza = forza;
    this.forzaCheckBox = forzaCheckBox;
    this.furtivita = furtivita;
    this.furtivitaCheckBox = furtivitaCheckBox;
    this.indagare = indagare;
    this.indagareCheckBox = indagareCheckBox;
    this.inganno = inganno;
    this.ingannoCheckBox = ingannoCheckBox;
    this.intelligenza = intelligenza;
    this.intelligenzaCheckBox = intelligenzaCheckBox;
    this.intimidazione = intimidazione;
    this.intimidazioneCheckBox = intimidazioneCheckBox;
    this.intrattenere = intrattenere;
    this.intrattenereCheckBox = intrattenereCheckBox;
    this.intuizione = intuizione;
    this.intuizioneCheckBox = intuizioneCheckBox;
    this.linguaggioMezzelfo = linguaggioMezzelfo;
    this.medicina = medicina;
    this.medicinaCheckBox = medicinaCheckBox;
    this.natura = natura;
    this.naturaCheckBox = naturaCheckBox;
    this.numCompetenzeText = numCompetenzeText;
    this.percezione = percezione;
    this.percezioneCheckBox = percezioneCheckBox;
    this.persuasione = persuasione;
    this.persuasioneCheckBox = persuasioneCheckBox;
    this.punteggiCaratteristica = punteggiCaratteristica;
    this.rapiditadimano = rapiditadimano;
    this.rapiditamanoCheckBox = rapiditamanoCheckBox;
    this.religione = religione;
    this.religioneCheckBox = religioneCheckBox;
    this.saggezza = saggezza;
    this.saggezzaCheckBox = saggezzaCheckBox;
    this.sopravvivenza = sopravvivenza;
    this.sopravvivenzaCheckBox = sopravvivenzaCheckBox;
    this.spinnerLingua = spinnerLingua;
    this.storia = storia;
    this.storiaCheckBox = storiaCheckBox;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCaratteristicheMezzelfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCaratteristicheMezzelfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_caratteristiche_mezzelfo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCaratteristicheMezzelfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acrobazia;
      LinearLayout acrobazia = ViewBindings.findChildViewById(rootView, id);
      if (acrobazia == null) {
        break missingId;
      }

      id = R.id.acrobaziaCheckBox;
      CheckBox acrobaziaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (acrobaziaCheckBox == null) {
        break missingId;
      }

      id = R.id.addanimaliCheckBox;
      CheckBox addanimaliCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (addanimaliCheckBox == null) {
        break missingId;
      }

      id = R.id.addestrareanimali;
      LinearLayout addestrareanimali = ViewBindings.findChildViewById(rootView, id);
      if (addestrareanimali == null) {
        break missingId;
      }

      id = R.id.arcano;
      LinearLayout arcano = ViewBindings.findChildViewById(rootView, id);
      if (arcano == null) {
        break missingId;
      }

      id = R.id.arcanoCheckBox;
      CheckBox arcanoCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (arcanoCheckBox == null) {
        break missingId;
      }

      id = R.id.atletica;
      LinearLayout atletica = ViewBindings.findChildViewById(rootView, id);
      if (atletica == null) {
        break missingId;
      }

      id = R.id.atleticaCheckBox;
      CheckBox atleticaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (atleticaCheckBox == null) {
        break missingId;
      }

      id = R.id.btn_avanti;
      Button btnAvanti = ViewBindings.findChildViewById(rootView, id);
      if (btnAvanti == null) {
        break missingId;
      }

      id = R.id.carisma;
      LinearLayout carisma = ViewBindings.findChildViewById(rootView, id);
      if (carisma == null) {
        break missingId;
      }

      id = R.id.carismaCheckBox;
      CheckBox carismaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (carismaCheckBox == null) {
        break missingId;
      }

      id = R.id.competenze_mezzelfo;
      TextView competenzeMezzelfo = ViewBindings.findChildViewById(rootView, id);
      if (competenzeMezzelfo == null) {
        break missingId;
      }

      id = R.id.costituzione;
      LinearLayout costituzione = ViewBindings.findChildViewById(rootView, id);
      if (costituzione == null) {
        break missingId;
      }

      id = R.id.costituzioneCheckBox;
      CheckBox costituzioneCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (costituzioneCheckBox == null) {
        break missingId;
      }

      id = R.id.destrezza;
      LinearLayout destrezza = ViewBindings.findChildViewById(rootView, id);
      if (destrezza == null) {
        break missingId;
      }

      id = R.id.destrezzaCheckBox;
      CheckBox destrezzaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (destrezzaCheckBox == null) {
        break missingId;
      }

      id = R.id.forza;
      LinearLayout forza = ViewBindings.findChildViewById(rootView, id);
      if (forza == null) {
        break missingId;
      }

      id = R.id.forzaCheckBox;
      CheckBox forzaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (forzaCheckBox == null) {
        break missingId;
      }

      id = R.id.furtivita;
      LinearLayout furtivita = ViewBindings.findChildViewById(rootView, id);
      if (furtivita == null) {
        break missingId;
      }

      id = R.id.furtivitaCheckBox;
      CheckBox furtivitaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (furtivitaCheckBox == null) {
        break missingId;
      }

      id = R.id.indagare;
      LinearLayout indagare = ViewBindings.findChildViewById(rootView, id);
      if (indagare == null) {
        break missingId;
      }

      id = R.id.indagareCheckBox;
      CheckBox indagareCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (indagareCheckBox == null) {
        break missingId;
      }

      id = R.id.inganno;
      LinearLayout inganno = ViewBindings.findChildViewById(rootView, id);
      if (inganno == null) {
        break missingId;
      }

      id = R.id.ingannoCheckBox;
      CheckBox ingannoCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (ingannoCheckBox == null) {
        break missingId;
      }

      id = R.id.intelligenza;
      LinearLayout intelligenza = ViewBindings.findChildViewById(rootView, id);
      if (intelligenza == null) {
        break missingId;
      }

      id = R.id.intelligenzaCheckBox;
      CheckBox intelligenzaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (intelligenzaCheckBox == null) {
        break missingId;
      }

      id = R.id.intimidazione;
      LinearLayout intimidazione = ViewBindings.findChildViewById(rootView, id);
      if (intimidazione == null) {
        break missingId;
      }

      id = R.id.intimidazioneCheckBox;
      CheckBox intimidazioneCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (intimidazioneCheckBox == null) {
        break missingId;
      }

      id = R.id.intrattenere;
      LinearLayout intrattenere = ViewBindings.findChildViewById(rootView, id);
      if (intrattenere == null) {
        break missingId;
      }

      id = R.id.intrattenereCheckBox;
      CheckBox intrattenereCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (intrattenereCheckBox == null) {
        break missingId;
      }

      id = R.id.intuizione;
      LinearLayout intuizione = ViewBindings.findChildViewById(rootView, id);
      if (intuizione == null) {
        break missingId;
      }

      id = R.id.intuizioneCheckBox;
      CheckBox intuizioneCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (intuizioneCheckBox == null) {
        break missingId;
      }

      id = R.id.linguaggio_mezzelfo;
      TextView linguaggioMezzelfo = ViewBindings.findChildViewById(rootView, id);
      if (linguaggioMezzelfo == null) {
        break missingId;
      }

      id = R.id.medicina;
      LinearLayout medicina = ViewBindings.findChildViewById(rootView, id);
      if (medicina == null) {
        break missingId;
      }

      id = R.id.medicinaCheckBox;
      CheckBox medicinaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (medicinaCheckBox == null) {
        break missingId;
      }

      id = R.id.natura;
      LinearLayout natura = ViewBindings.findChildViewById(rootView, id);
      if (natura == null) {
        break missingId;
      }

      id = R.id.naturaCheckBox;
      CheckBox naturaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (naturaCheckBox == null) {
        break missingId;
      }

      id = R.id.numCompetenzeText;
      TextView numCompetenzeText = ViewBindings.findChildViewById(rootView, id);
      if (numCompetenzeText == null) {
        break missingId;
      }

      id = R.id.percezione;
      LinearLayout percezione = ViewBindings.findChildViewById(rootView, id);
      if (percezione == null) {
        break missingId;
      }

      id = R.id.percezioneCheckBox;
      CheckBox percezioneCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (percezioneCheckBox == null) {
        break missingId;
      }

      id = R.id.persuasione;
      LinearLayout persuasione = ViewBindings.findChildViewById(rootView, id);
      if (persuasione == null) {
        break missingId;
      }

      id = R.id.persuasioneCheckBox;
      CheckBox persuasioneCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (persuasioneCheckBox == null) {
        break missingId;
      }

      id = R.id.punteggi_caratteristica;
      TextView punteggiCaratteristica = ViewBindings.findChildViewById(rootView, id);
      if (punteggiCaratteristica == null) {
        break missingId;
      }

      id = R.id.rapiditadimano;
      LinearLayout rapiditadimano = ViewBindings.findChildViewById(rootView, id);
      if (rapiditadimano == null) {
        break missingId;
      }

      id = R.id.rapiditamanoCheckBox;
      CheckBox rapiditamanoCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (rapiditamanoCheckBox == null) {
        break missingId;
      }

      id = R.id.religione;
      LinearLayout religione = ViewBindings.findChildViewById(rootView, id);
      if (religione == null) {
        break missingId;
      }

      id = R.id.religioneCheckBox;
      CheckBox religioneCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (religioneCheckBox == null) {
        break missingId;
      }

      id = R.id.saggezza;
      LinearLayout saggezza = ViewBindings.findChildViewById(rootView, id);
      if (saggezza == null) {
        break missingId;
      }

      id = R.id.saggezzaCheckBox;
      CheckBox saggezzaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (saggezzaCheckBox == null) {
        break missingId;
      }

      id = R.id.sopravvivenza;
      LinearLayout sopravvivenza = ViewBindings.findChildViewById(rootView, id);
      if (sopravvivenza == null) {
        break missingId;
      }

      id = R.id.sopravvivenzaCheckBox;
      CheckBox sopravvivenzaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (sopravvivenzaCheckBox == null) {
        break missingId;
      }

      id = R.id.spinner_lingua;
      Spinner spinnerLingua = ViewBindings.findChildViewById(rootView, id);
      if (spinnerLingua == null) {
        break missingId;
      }

      id = R.id.storia;
      LinearLayout storia = ViewBindings.findChildViewById(rootView, id);
      if (storia == null) {
        break missingId;
      }

      id = R.id.storiaCheckBox;
      CheckBox storiaCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (storiaCheckBox == null) {
        break missingId;
      }

      return new FragmentCaratteristicheMezzelfoBinding((ScrollView) rootView, acrobazia,
          acrobaziaCheckBox, addanimaliCheckBox, addestrareanimali, arcano, arcanoCheckBox,
          atletica, atleticaCheckBox, btnAvanti, carisma, carismaCheckBox, competenzeMezzelfo,
          costituzione, costituzioneCheckBox, destrezza, destrezzaCheckBox, forza, forzaCheckBox,
          furtivita, furtivitaCheckBox, indagare, indagareCheckBox, inganno, ingannoCheckBox,
          intelligenza, intelligenzaCheckBox, intimidazione, intimidazioneCheckBox, intrattenere,
          intrattenereCheckBox, intuizione, intuizioneCheckBox, linguaggioMezzelfo, medicina,
          medicinaCheckBox, natura, naturaCheckBox, numCompetenzeText, percezione,
          percezioneCheckBox, persuasione, persuasioneCheckBox, punteggiCaratteristica,
          rapiditadimano, rapiditamanoCheckBox, religione, religioneCheckBox, saggezza,
          saggezzaCheckBox, sopravvivenza, sopravvivenzaCheckBox, spinnerLingua, storia,
          storiaCheckBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
