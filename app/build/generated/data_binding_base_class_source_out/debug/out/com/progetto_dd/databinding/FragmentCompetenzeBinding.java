// Generated by data binding compiler. Do not edit!
package com.progetto_dd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.progetto_dd.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentCompetenzeBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout acrobazia;

  @NonNull
  public final CheckBox acrobaziaCheckBox;

  @NonNull
  public final CheckBox addanimaliCheckBox;

  @NonNull
  public final LinearLayout addestrareanimali;

  @NonNull
  public final LinearLayout arcano;

  @NonNull
  public final CheckBox arcanoCheckBox;

  @NonNull
  public final LinearLayout atletica;

  @NonNull
  public final CheckBox atleticaCheckBox;

  @NonNull
  public final Button btnAvanti;

  @NonNull
  public final LinearLayout competenzeBardo;

  @NonNull
  public final LinearLayout competenzeMonaco;

  @NonNull
  public final LinearLayout furtivita;

  @NonNull
  public final CheckBox furtivitaCheckBox;

  @NonNull
  public final LinearLayout indagare;

  @NonNull
  public final CheckBox indagareCheckBox;

  @NonNull
  public final LinearLayout inganno;

  @NonNull
  public final CheckBox ingannoCheckBox;

  @NonNull
  public final LinearLayout intimidazione;

  @NonNull
  public final CheckBox intimidazioneCheckBox;

  @NonNull
  public final LinearLayout intrattenere;

  @NonNull
  public final CheckBox intrattenereCheckBox;

  @NonNull
  public final LinearLayout intuizione;

  @NonNull
  public final CheckBox intuizioneCheckBox;

  @NonNull
  public final LinearLayout medicina;

  @NonNull
  public final CheckBox medicinaCheckBox;

  @NonNull
  public final LinearLayout natura;

  @NonNull
  public final CheckBox naturaCheckBox;

  @NonNull
  public final TextView numCompetenzeText;

  @NonNull
  public final LinearLayout percezione;

  @NonNull
  public final CheckBox percezioneCheckBox;

  @NonNull
  public final LinearLayout persuasione;

  @NonNull
  public final CheckBox persuasioneCheckBox;

  @NonNull
  public final LinearLayout rapiditadimano;

  @NonNull
  public final CheckBox rapiditamanoCheckBox;

  @NonNull
  public final LinearLayout religione;

  @NonNull
  public final CheckBox religioneCheckBox;

  @NonNull
  public final LinearLayout sopravvivenza;

  @NonNull
  public final CheckBox sopravvivenzaCheckBox;

  @NonNull
  public final Spinner spinner1;

  @NonNull
  public final Spinner spinner2;

  @NonNull
  public final Spinner spinner3;

  @NonNull
  public final Spinner spinnerArtigiano;

  @NonNull
  public final Spinner spinnerMusicale;

  @NonNull
  public final LinearLayout storia;

  @NonNull
  public final CheckBox storiaCheckBox;

  @Bindable
  protected Integer mNumCompetenze;

  protected FragmentCompetenzeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout acrobazia, CheckBox acrobaziaCheckBox, CheckBox addanimaliCheckBox,
      LinearLayout addestrareanimali, LinearLayout arcano, CheckBox arcanoCheckBox,
      LinearLayout atletica, CheckBox atleticaCheckBox, Button btnAvanti,
      LinearLayout competenzeBardo, LinearLayout competenzeMonaco, LinearLayout furtivita,
      CheckBox furtivitaCheckBox, LinearLayout indagare, CheckBox indagareCheckBox,
      LinearLayout inganno, CheckBox ingannoCheckBox, LinearLayout intimidazione,
      CheckBox intimidazioneCheckBox, LinearLayout intrattenere, CheckBox intrattenereCheckBox,
      LinearLayout intuizione, CheckBox intuizioneCheckBox, LinearLayout medicina,
      CheckBox medicinaCheckBox, LinearLayout natura, CheckBox naturaCheckBox,
      TextView numCompetenzeText, LinearLayout percezione, CheckBox percezioneCheckBox,
      LinearLayout persuasione, CheckBox persuasioneCheckBox, LinearLayout rapiditadimano,
      CheckBox rapiditamanoCheckBox, LinearLayout religione, CheckBox religioneCheckBox,
      LinearLayout sopravvivenza, CheckBox sopravvivenzaCheckBox, Spinner spinner1,
      Spinner spinner2, Spinner spinner3, Spinner spinnerArtigiano, Spinner spinnerMusicale,
      LinearLayout storia, CheckBox storiaCheckBox) {
    super(_bindingComponent, _root, _localFieldCount);
    this.acrobazia = acrobazia;
    this.acrobaziaCheckBox = acrobaziaCheckBox;
    this.addanimaliCheckBox = addanimaliCheckBox;
    this.addestrareanimali = addestrareanimali;
    this.arcano = arcano;
    this.arcanoCheckBox = arcanoCheckBox;
    this.atletica = atletica;
    this.atleticaCheckBox = atleticaCheckBox;
    this.btnAvanti = btnAvanti;
    this.competenzeBardo = competenzeBardo;
    this.competenzeMonaco = competenzeMonaco;
    this.furtivita = furtivita;
    this.furtivitaCheckBox = furtivitaCheckBox;
    this.indagare = indagare;
    this.indagareCheckBox = indagareCheckBox;
    this.inganno = inganno;
    this.ingannoCheckBox = ingannoCheckBox;
    this.intimidazione = intimidazione;
    this.intimidazioneCheckBox = intimidazioneCheckBox;
    this.intrattenere = intrattenere;
    this.intrattenereCheckBox = intrattenereCheckBox;
    this.intuizione = intuizione;
    this.intuizioneCheckBox = intuizioneCheckBox;
    this.medicina = medicina;
    this.medicinaCheckBox = medicinaCheckBox;
    this.natura = natura;
    this.naturaCheckBox = naturaCheckBox;
    this.numCompetenzeText = numCompetenzeText;
    this.percezione = percezione;
    this.percezioneCheckBox = percezioneCheckBox;
    this.persuasione = persuasione;
    this.persuasioneCheckBox = persuasioneCheckBox;
    this.rapiditadimano = rapiditadimano;
    this.rapiditamanoCheckBox = rapiditamanoCheckBox;
    this.religione = religione;
    this.religioneCheckBox = religioneCheckBox;
    this.sopravvivenza = sopravvivenza;
    this.sopravvivenzaCheckBox = sopravvivenzaCheckBox;
    this.spinner1 = spinner1;
    this.spinner2 = spinner2;
    this.spinner3 = spinner3;
    this.spinnerArtigiano = spinnerArtigiano;
    this.spinnerMusicale = spinnerMusicale;
    this.storia = storia;
    this.storiaCheckBox = storiaCheckBox;
  }

  public abstract void setNumCompetenze(@Nullable Integer numCompetenze);

  @Nullable
  public Integer getNumCompetenze() {
    return mNumCompetenze;
  }

  @NonNull
  public static FragmentCompetenzeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_competenze, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentCompetenzeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentCompetenzeBinding>inflateInternal(inflater, R.layout.fragment_competenze, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentCompetenzeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_competenze, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentCompetenzeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentCompetenzeBinding>inflateInternal(inflater, R.layout.fragment_competenze, null, false, component);
  }

  public static FragmentCompetenzeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentCompetenzeBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentCompetenzeBinding)bind(component, view, R.layout.fragment_competenze);
  }
}
