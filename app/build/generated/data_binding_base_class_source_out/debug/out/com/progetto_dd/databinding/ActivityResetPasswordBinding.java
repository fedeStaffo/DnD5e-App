// Generated by view binder compiler. Do not edit!
package com.progetto_dd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.progetto_dd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResetPasswordBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText emailPerReset;

  @NonNull
  public final ImageView forgetPasswordBackBtn;

  @NonNull
  public final TextView forgetPasswordDescription;

  @NonNull
  public final ImageView forgetPasswordIcon;

  @NonNull
  public final TextView forgetPasswordTitle;

  @NonNull
  public final Button resetButton;

  private ActivityResetPasswordBinding(@NonNull ScrollView rootView,
      @NonNull TextInputEditText emailPerReset, @NonNull ImageView forgetPasswordBackBtn,
      @NonNull TextView forgetPasswordDescription, @NonNull ImageView forgetPasswordIcon,
      @NonNull TextView forgetPasswordTitle, @NonNull Button resetButton) {
    this.rootView = rootView;
    this.emailPerReset = emailPerReset;
    this.forgetPasswordBackBtn = forgetPasswordBackBtn;
    this.forgetPasswordDescription = forgetPasswordDescription;
    this.forgetPasswordIcon = forgetPasswordIcon;
    this.forgetPasswordTitle = forgetPasswordTitle;
    this.resetButton = resetButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResetPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResetPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reset_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResetPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.email_per_reset;
      TextInputEditText emailPerReset = ViewBindings.findChildViewById(rootView, id);
      if (emailPerReset == null) {
        break missingId;
      }

      id = R.id.forget_password_back_btn;
      ImageView forgetPasswordBackBtn = ViewBindings.findChildViewById(rootView, id);
      if (forgetPasswordBackBtn == null) {
        break missingId;
      }

      id = R.id.forget_password_description;
      TextView forgetPasswordDescription = ViewBindings.findChildViewById(rootView, id);
      if (forgetPasswordDescription == null) {
        break missingId;
      }

      id = R.id.forget_password_icon;
      ImageView forgetPasswordIcon = ViewBindings.findChildViewById(rootView, id);
      if (forgetPasswordIcon == null) {
        break missingId;
      }

      id = R.id.forget_password_title;
      TextView forgetPasswordTitle = ViewBindings.findChildViewById(rootView, id);
      if (forgetPasswordTitle == null) {
        break missingId;
      }

      id = R.id.reset_button;
      Button resetButton = ViewBindings.findChildViewById(rootView, id);
      if (resetButton == null) {
        break missingId;
      }

      return new ActivityResetPasswordBinding((ScrollView) rootView, emailPerReset,
          forgetPasswordBackBtn, forgetPasswordDescription, forgetPasswordIcon, forgetPasswordTitle,
          resetButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
